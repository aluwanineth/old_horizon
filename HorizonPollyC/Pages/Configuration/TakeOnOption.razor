@page "/configuration/TakeOnOption"
@using HorizonPollyC.Services.General
@using HorizonPollyC.Models.Configuration
@using HorizonPollyC.Services.Configuration
@using Microsoft.JSInterop;
@inject IExportService _exportService
@inject IJSRuntime js
@inject IGeneric<TakeOnOptionVM> _genericService


<h3>Take on options</h3>

@if (modelList != null)
{


    <RadzenButton Icon="add_circle_outline" style="margin-bottom: 10px" Text="Add New Record" Click="@InsertRow" 
    Disabled=@(modelToInsert != null) />
    <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => Export("excel"))" Class="mb-4 mr-2" />
    <RadzenButton Text="Export CSV" Icon="wrap_text" Click="@(args => Export("csv"))" Class="mb-4" />
    <RadzenDataGrid @ref="modelGrid" 
                    Data="@modelList"
                    TItem="TakeOnOptionVM" 
        AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" EditMode="DataGridEditMode.Single" RowUpdate="@OnUpdateRow" RowCreate="@OnCreateRow">
        <Columns>
           <RadzenDataGridColumn TItem="TakeOnOptionVM" Property="TakeOnOptionCd" Filterable="true" Title="CD" Width="70px" TextAlign="TextAlign.Right">
                <EditTemplate Context="takeOnOptionVM">
                    <RadzenNumeric Min="1" Max="100" @bind-Value="takeOnOptionVM.TakeOnOptionCd" Class="w-70" Disabled="@enable" Name="TakeOnOptionCd" />
                    <RadzenRequiredValidator Component="TakeOnOptionCd" Text="Value is required" Popup="true" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="TakeOnOptionVM" Property="ShortDesc" Title="Description" Width="140px" TextAlign="TextAlign.Left">
                <EditTemplate Context="takeOnOptionVM">
                    <RadzenTextBox @bind-Value="takeOnOptionVM.ShortDesc" Style="width:100%; display: block" Name="ShortDesc" />
                    <RadzenRequiredValidator Component="ShortDesc" Text="Value is required" Popup="true" />
                </EditTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="TakeOnOptionVM" Property="PremiumChangePerc" Title="Premiun change" FormatString="{0:00.00}" Width="140px" TextAlign="TextAlign.Left">
                <EditTemplate Context="takeOnOptionVM">
                    <RadzenNumeric Min="1" Max="100" @bind-Value="takeOnOptionVM.PremiumChangePerc"  Class="w-70" Disabled="@enable" Name="PremiumChangePerc" />
                    <RadzenRequiredValidator Component="PremiumChangePerc" Text="Value is required" Popup="true" />
                </EditTemplate>
            </RadzenDataGridColumn>


            <RadzenDataGridColumn TItem="TakeOnOptionVM" Property="BenefitChangePerc" Title="Benefit Change" FormatString="{0:00.00}" Width="140px" TextAlign="TextAlign.Left">
                <EditTemplate Context="takeOnOptionVM">
                    <RadzenNumeric Min="1" Max="100" @bind-Value="takeOnOptionVM.BenefitChangePerc"  Class="w-70" Disabled="@enable" Name="BenefitChangePerc" />
                    <RadzenRequiredValidator Component="BenefitChangePerc" Text="Value is required" Popup="true" />
                </EditTemplate>
            </RadzenDataGridColumn>
        
            <RadzenDataGridColumn TItem="TakeOnOptionVM" Property="EffDate" Title="Eff date" Width="100px" TextAlign="TextAlign.Left"  FormatString="{0:d}">
              <EditTemplate Context="takeOnOptionVM">
                     <RadzenDatePicker @bind-Value="takeOnOptionVM.EffDate" DateFormat="d" Class="w-100" Name="EffDate"/>  
                     <RadzenRequiredValidator Component="EffDate" Text="Value is required" Popup="true" />
                </EditTemplate>
              </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="TakeOnOptionVM" Property="ExpDate" Title="Expiry Date" Width="100px" TextAlign="TextAlign.Left"  FormatString="{0:d}">
              <EditTemplate Context="takeOnOptionVM">
                     <RadzenDatePicker @bind-Value="takeOnOptionVM.ExpDate" DateFormat="d" Class="w-100" Name="ExpDate"/> 
                     <RadzenRequiredValidator Component="ExpDate" Text="Value is required" Popup="true" />
                </EditTemplate>
              </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="TakeOnOptionVM" Property="IsActive" Title="Is Active" Width="50px" TextAlign="TextAlign.Left">
                 <Template Context="takeOnOptionVM">
                    <RadzenSwitch @bind-Value="takeOnOptionVM.IsActive" Disabled="false" />
                </Template>
                 <EditTemplate Context="takeOnOptionVM">
                    <RadzenSwitch @bind-Value="takeOnOptionVM.IsActive" Disabled="false" />
                </EditTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="TakeOnOptionVM" Context="schemePlanFactorssvm" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="100px">
                <Template Context="takeOnOptionVM">
                    <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Primary" Class="m-1" Click="@(args => EditRow(takeOnOptionVM))" @onclick:stopPropagation="true">
                    </RadzenButton>
                </Template>
                <EditTemplate Context="takeOnOptionVM">
                    <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Primary" Class="m-1" Click="@((args) => SaveRow(takeOnOptionVM))">
                    </RadzenButton>
                    <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Primary" Class="m-1" Click="@((args) => CancelEdit(takeOnOptionVM))">
                    </RadzenButton>
                </EditTemplate>
            </RadzenDataGridColumn>

        </Columns>
    </RadzenDataGrid>


}