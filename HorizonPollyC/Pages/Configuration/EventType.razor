@page "/configuration/eventtype"
@using HorizonPollyC.Services.General
@using HorizonPollyC.Models.Configuration
@using HorizonPollyC.Services.Configuration
@using Microsoft.JSInterop;
@inject IExportService _exportService
@inject IJSRuntime js
@inject IEventTypeService _eventtypeService
<h3>Event Types</h3>

@if (eventtypes != null)
{

    <RadzenButton Icon="add_circle_outline" style="margin-bottom: 10px" Text="Add New Record" Click="@InsertRow" Disabled=@(eventtypeToInsert != null) />
    <RadzenButton Text="Export XLS" Icon="grid_on" Click="@(args => Export("excel"))" Class="mb-4 mr-2" />
    <RadzenButton Text="Export CSV" Icon="wrap_text" Click="@(args => Export("csv"))" Class="mb-4" />
    <RadzenDataGrid @ref="eventtypeGrid" AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="10" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                Data="@eventtypes" TItem="EventTypeVM" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" EditMode="DataGridEditMode.Single" RowUpdate="@OnUpdateRow" RowCreate="@OnCreateRow">
        <Columns>
            <RadzenDataGridColumn TItem="EventTypeVM" Property="EventTypeCD" Filterable="true" Title="Event Type CD" Width="110px" TextAlign="TextAlign.Right">
                <EditTemplate Context="eventtypevm">
                    <RadzenNumeric Min="1" Max="100" @bind-Value="eventtypevm.EventTypeCD" Class="w-70" Disabled="@enable" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="EventTypeVM" Property="EventTypeCode" Title="EventType Code" Width="110px" TextAlign="TextAlign.Left">
                <EditTemplate Context="eventtypevm">
                    <RadzenTextBox @bind-Value="eventtypevm.EventTypeCode" Style="width:100%; display: block" Name="EventTypeCode" />
                      <RadzenRequiredValidator Component="EventTypeCode" Text="Value is required" Popup="true" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="EventTypeVM" Property="EventTypeDescr" Title="EventType Description" Width="110px" TextAlign="TextAlign.Left">
                <EditTemplate Context="eventtypevm">
                    <RadzenTextBox @bind-Value="eventtypevm.EventTypeDescr" Style="width:100%; display: block" Name="EventTypeDescr" />
                      <RadzenRequiredValidator Component="EventTypeDescr" Text="Value is required" Popup="true" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="EventTypeVM" Property="UserId" Title="User Id" Width="110px" TextAlign="TextAlign.Left">
                <EditTemplate Context="eventtypevm">
                    <RadzenTextBox @bind-Value="eventtypevm.UserId" Style="width:100%; display: block" Name="UserId" />
                      <RadzenRequiredValidator Component="UserId" Text="Value is required" Popup="true" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="EventTypeVM" Property="LastChanged" Title="Last Changed" Width="100px" TextAlign="TextAlign.Left"  FormatString="{0:d}">
                <EditTemplate Context="eventtypevm">
                    <RadzenDatePicker @bind-Value="eventtypevm.LastChanged" DateFormat="d" Class="w-100" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="EventTypeVM" Property="IsActive" Title="Is Active" Width="70px" TextAlign="TextAlign.Left">
                <Template Context="eventtypevm">
                    <RadzenSwitch @bind-Value="eventtypevm.IsActive" Disabled="false" />
                </Template>
                <EditTemplate Context="eventtypevm">
                    <RadzenSwitch @bind-Value="eventtypevm.IsActive" Disabled="false" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="EventTypeVM" Context="eventtypevm" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="80px">
                <Template Context="eventtypevm">
                    <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Primary" Class="m-1" Click="@(args => EditRow(eventtypevm))" @onclick:stopPropagation="true">
                    </RadzenButton>
                </Template>
                <EditTemplate Context="eventtypevm">
                    <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Primary" Class="m-1" Click="@((args) => SaveRow(eventtypevm))">
                    </RadzenButton>
                    <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Primary" Class="m-1" Click="@((args) => CancelEdit(eventtypevm))">
                    </RadzenButton>
                </EditTemplate>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>


}